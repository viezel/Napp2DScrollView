/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * Appcelerator Titanium Mobile
 * Copyright (c) 2009-2010 by Appcelerator, Inc. All Rights Reserved.
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 *
 */
package dk.napp.androidscroll;

import org.appcelerator.kroll.KrollDict;
import org.appcelerator.kroll.KrollProxy;
import org.appcelerator.kroll.annotations.Kroll;
import org.appcelerator.kroll.common.AsyncResult;
import org.appcelerator.kroll.common.Log;
import org.appcelerator.kroll.common.TiConfig;
import org.appcelerator.kroll.common.TiMessenger;
import org.appcelerator.titanium.TiC;
import org.appcelerator.titanium.TiApplication;
import org.appcelerator.titanium.proxy.TiViewProxy;
import org.appcelerator.titanium.view.TiUIView;

import android.app.Activity;
import android.os.Message;


// This proxy can be created by calling Androidscroll.createExample({message: "hello world"})
@Kroll.proxy(creatableInModule=AndroidscrollModule.class, propertyAccessors = {
	TiC.PROPERTY_CONTENT_HEIGHT, TiC.PROPERTY_CONTENT_WIDTH,
	//TiC.PROPERTY_SHOW_HORIZONTAL_SCROLL_INDICATOR,
	//TiC.PROPERTY_SHOW_VERTICAL_SCROLL_INDICATOR, //only for extend scrollView
	TiC.PROPERTY_SCROLL_TYPE,
	TiC.PROPERTY_CONTENT_OFFSET
})
public class NappscrollProxy extends TiViewProxy
{
	// Standard Debugging variables
	private static final String LCAT = "NappscrollProxy";
	private static final boolean DBG = TiConfig.LOGD;
	
	private static final int MSG_FIRST_ID = KrollProxy.MSG_LAST_ID + 1;
	private static final int MSG_SCROLL_TO = MSG_FIRST_ID + 100;
	private static final int MSG_SCROLL_TO_BOTTOM = MSG_FIRST_ID + 101;
	protected static final int MSG_LAST_ID = MSG_FIRST_ID + 999;

	// Constructor
	public NappscrollProxy()
	{
		super();
	}

	@Override
	public TiUIView createView(Activity activity)
	{
		TiUIView view = new NappscrollView(this);
		view.getLayoutParams().autoFillsHeight = true;
		view.getLayoutParams().autoFillsWidth = true;
		return view;
	}

	// Handle creation options
	@Override
	public void handleCreationDict(KrollDict options)
	{
		super.handleCreationDict(options);
		
		if (options.containsKey("message")) {
			Log.d(LCAT, "example created with message: " + options.get("message"));
		}
	}
	
	// Methods
	@Kroll.method
	public void printMessage(String message)
	{
		Log.d(LCAT, "printing message: " + message);
	}
	
	@Kroll.method
	public void scrollTo(int x, int y) {
		//Log.e(LCAT, "PROXY scrollTo");
		if (!TiApplication.isUIThread()) {
			TiMessenger.sendBlockingMainMessage(getMainHandler().obtainMessage(MSG_SCROLL_TO, x, y), getActivity());
		} else {
//			handleScrollTo(x,y);
		}
	}
	
//	@Kroll.method
//	public void scrollToBottom() {
//		if (!TiApplication.isUIThread()) {
//			TiMessenger.sendBlockingMainMessage(getMainHandler().obtainMessage(MSG_SCROLL_TO_BOTTOM), getActivity());
//		} else {
//			handleScrollToBottom();
//		}
//	}
	
	public NappscrollView getScrollView() {
		return (NappscrollView) getOrCreateView();
	}
	
//	public void handleScrollTo(int x, int y) {
//		getScrollView().scrollTo(x, y);
//	}
	
//	public void handleScrollToBottom() {
//		getScrollView().scrollToBottom();
//	}
	
	// used to ensure that we are on main thread. When we are, fire handlescrollTo()..
	@Override
	public boolean handleMessage(Message msg) {
		if (msg.what == MSG_SCROLL_TO) {
//			handleScrollTo(msg.arg1, msg.arg2);
			AsyncResult result = (AsyncResult) msg.obj;
			result.setResult(null); // signal scrolled
			return true;
		} else if (msg.what == MSG_SCROLL_TO_BOTTOM) {
//			handleScrollToBottom();
			AsyncResult result = (AsyncResult) msg.obj;
			result.setResult(null); // signal scrolled
			return true;
		}
		return super.handleMessage(msg);
	}


	@Kroll.getProperty @Kroll.method
	public String getMessage()
	{
        return "Hello World from my module";
	}

	@Kroll.setProperty @Kroll.method
	public void setMessage(String message)
	{
	    Log.d(LCAT, "Tried setting module message to: " + message);
	}
}